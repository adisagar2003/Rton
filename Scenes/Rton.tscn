[gd_scene load_steps=18 format=3 uid="uid://ci82aii7lfwk3"]

[ext_resource type="Texture2D" uid="uid://bj3odikpci6g6" path="res://Scenes/main-char.png" id="1_md4u1"]
[ext_resource type="Script" path="res://Scenes/trail.gd" id="2_5xuv2"]

[sub_resource type="GDScript" id="GDScript_3fylj"]
script/source = "extends CharacterBody2D

@export var SPEED = 150.0;
@export var VERTICAL_SPEED = 50.0;

#DASH
var dashDirection = 1.0;
@export var DASH_INTENSITY = 270.0;
@export var DASH_COOLDOWN_INTENSITY = 57.0;
const JUMP_VELOCITY = -400.0
var isDashing = false;
var positionAfterDash = Vector2(0,0)
var dash_duration = 0.1;
var elapsed_time = 0;
var health = 100;
var time  = 0;

#stop the dash time smoothly.
var smoothDashFade = .03;
var stopDashTime = 0;

@onready var camera_shake: Node = $\"../CameraShake\";

#TRAIL
var queue : Array
@export var MAX_LENGTH_TRAIL: int

enum States {Idle, Running, Attacking, Hurt, Dashing};

enum FacingDirection {Left, Right};


var state_names = {
	States.Idle: \"Idle\",
	States.Running: \"Running\",
	States.Attacking: \"Attacking\",
	States.Hurt: \"Hurt\",
	States.Dashing:\"Dashing\"
}
var state = States.Idle;
var facingDirection = FacingDirection.Left;

# Should be propelled to this direction when hurt.
var propellDirection = Vector2.ZERO;

func _ready() -> void:
	pass
func _physics_process(delta: float) -> void:

	HandleInputMovement();
	HandleSpriteFlip();
	AnimHandle();
	HandleAttack(delta);
	DashTrail();
	move_and_slide();
	print(state_names[state])
	
	#implement hurt.
	if (state == States.Hurt):
		velocity = propellDirection;
		
	
	# Implement dash duration;
	if isDashing:
		state = States.Dashing;
		if facingDirection == FacingDirection.Left:
			# 27 pixels / time from dash timer.
			velocity.x = 638.28*-1;
		else:
			velocity.x = 636.29*1;
	
	while stopDashTime > 0:
		velocity = lerp(velocity, Vector2.ZERO, delta * DASH_COOLDOWN_INTENSITY);
		stopDashTime-= delta * DASH_COOLDOWN_INTENSITY;
		pass			
	
func HandleSpriteFlip():
	var direction := Input.get_axis(\"ui_left\", \"ui_right\");
	if (direction < 0):
		facingDirection = FacingDirection.Left;
		$AnimatedSprite2D.flip_h = false;
	if (direction > 0):
		facingDirection = FacingDirection.Right;
		$AnimatedSprite2D.flip_h = true;
	if (direction == 0):
		$AnimatedSprite2D.flip_h = $AnimatedSprite2D.flip_h;
	
func AnimHandle():
	if (state == States.Idle):
		$AnimatedSprite2D.play(\"Idle\");
	if (state == States.Running):
		$AnimatedSprite2D.play(\"Run\");
	if (state == States.Attacking):
		$AnimatedSprite2D.play(\"attack\");

func HandleAttack(delta):
	if Input.is_action_just_pressed(\"Attack\") and state == States.Idle:
		var time = 0;
		
		# Check if already attacking
		if (state == States.Attacking):
			pass

		else:
			
			state = States.Attacking;
			
			var dashDirection = 1;
			# Set dash direction accordingly
			if (facingDirection == 0):
				dashDirection = -1;
			else:
				dashDirection = 1;
			 
			# push to the required direction
			
			isDashing = true;
			# Start the attack cooldown
			$AttackCooldown.start();
			# Start dashing 
			$DashTimer.start();
			
func StopAttack():
	pass

func HandleInputMovement():
	if (!isDashing and state == States.Idle):
		var direction := Input.get_axis(\"ui_left\", \"ui_right\");
		var verticalDirection := Input.get_axis(\"ui_up\", \"ui_down\");
		if verticalDirection:
			velocity.y = verticalDirection;
		else:
			velocity.y = move_toward(velocity.y, 0, SPEED);
		if direction:
			velocity.x = direction;
		else:
			velocity.x = move_toward(velocity.x, 0, SPEED);
			if (state !=States.Attacking):
				state = States.Idle;
		# NORMALIZE VELOCITY
		velocity = velocity.normalized() * SPEED;
		#Handle states
		# handle when pressing both buttons, reduce the speed a lil.
		#var pos = animated_sprite_2d.global_position;
		#add_point(pos);	
		
	
func _on_timer_timeout() -> void:
	queue.clear();
	state = States.Idle;
	time = 0;
	pass # Replace with function body.
	
# HANDLE LINE2d TRAIL
func DashTrail():
	if isDashing:
		$AnimatedSprite2D/Trail.width = 6;
	else:
		$AnimatedSprite2D/Trail.width = 1;
		
	# when attacking, show trail,
	# should be thin at end
	# reduce to size after .7s	
	var playerPos = position;
	queue.push_front(position);
		
	if (queue.size() > MAX_LENGTH_TRAIL):
		queue.pop_back();
		
	$AnimatedSprite2D/Trail.clear_points();
		
	for point in queue:
		$AnimatedSprite2D/Trail.add_point(point);	

func Player():
	pass

# Case where player gets hurt

func getHurt(AttackDirection):
	# reduce the health.
	health-=20;
	# handle death.
	if (health < 0):
		get_tree().paused = true;
		$\"../GameOverScreen\".visible = true;
	else:
		propellDirection = AttackDirection * 400;
		# Apply camera shake
		camera_shake.shakeTheCamera();
		# set trail  invisible.
		$AnimatedSprite2D/Trail.visible= false;
		state = States.Hurt;
		$HurtTimer.start();
	pass


# for enemies to see
func getState() -> String:
	if (state == States.Attacking):
		return \"Attacking\";
	elif (state == States.Dashing):
		return \"Attacking\";
	else:
		return \"\";

func _on_dash_timer_timeout() -> void:
	isDashing = false;
	# Start stop move function. 
	stopDashTime = 0.02;
	pass # Replace with function body.


func _on_hurt_timer_timeout() -> void:
	state = States.Idle;
	velocity = Vector2.ZERO;
	$AnimatedSprite2D/Trail.visible= true;
	pass # Replace with function body.
"

[sub_resource type="AtlasTexture" id="AtlasTexture_vl742"]
atlas = ExtResource("1_md4u1")
region = Rect2(0, 0, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_pl7cx"]
atlas = ExtResource("1_md4u1")
region = Rect2(8, 0, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_udhne"]
atlas = ExtResource("1_md4u1")
region = Rect2(16, 0, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_6bbpv"]
atlas = ExtResource("1_md4u1")
region = Rect2(0, 8, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_0yig4"]
atlas = ExtResource("1_md4u1")
region = Rect2(8, 8, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_p04th"]
atlas = ExtResource("1_md4u1")
region = Rect2(16, 8, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_3yj6o"]
atlas = ExtResource("1_md4u1")
region = Rect2(0, 16, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_jqf7c"]
atlas = ExtResource("1_md4u1")
region = Rect2(8, 16, 8, 8)

[sub_resource type="AtlasTexture" id="AtlasTexture_sofad"]
atlas = ExtResource("1_md4u1")
region = Rect2(16, 16, 8, 8)

[sub_resource type="SpriteFrames" id="SpriteFrames_jv7t3"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pl7cx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}],
"loop": true,
"name": &"Idle",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_udhne")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6bbpv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0yig4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}],
"loop": true,
"name": &"Run",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_vl742")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_p04th")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3yj6o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jqf7c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sofad")
}],
"loop": true,
"name": &"attack",
"speed": 15.0
}]

[sub_resource type="Animation" id="Animation_0aact"]
resource_name = "Attack"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:sprite_frames")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(),
"transitions": PackedFloat32Array(),
"update": 1,
"values": []
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6swys"]
_data = {
"Attack": SubResource("Animation_0aact")
}

[sub_resource type="Curve" id="Curve_g6suf"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.499099, 0.690271), 0.0, 0.0, 0, 0, Vector2(1, 0.178359), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_v0pb8"]
radius = 4.0
height = 10.0

[node name="Rton" type="CharacterBody2D"]
script = SubResource("GDScript_3fylj")
MAX_LENGTH_TRAIL = 10

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
sprite_frames = SubResource("SpriteFrames_jv7t3")
animation = &"attack"
metadata/_aseprite_wizard_interface_config_ = {
"layer_section": true,
"pending_changes": {}
}
metadata/_aseprite_wizard_config_ = {
"layers": [],
"o_ex_p": "",
"o_folder": "",
"o_name": "",
"only_visible": false,
"should_round_fps": true,
"slice": "",
"source": "res://Assets/Aesprite/main-char.aseprite"
}
metadata/_aseprite_wizard_source_file_hash_ = "c1d1f22dfdf3413cdbe2b39fc6a64906"

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimatedSprite2D"]
root_node = NodePath("../..")
libraries = {
"": SubResource("AnimationLibrary_6swys")
}

[node name="Trail" type="Line2D" parent="AnimatedSprite2D"]
show_behind_parent = true
top_level = true
width = 6.0
width_curve = SubResource("Curve_g6suf")
default_color = Color(1, 0, 0.109804, 1)
script = ExtResource("2_5xuv2")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_v0pb8")

[node name="AttackCooldown" type="Timer" parent="."]
wait_time = 0.315
one_shot = true

[node name="DashTimer" type="Timer" parent="."]
wait_time = 0.047
one_shot = true

[node name="HurtTimer" type="Timer" parent="."]
wait_time = 0.295

[connection signal="timeout" from="AttackCooldown" to="." method="_on_timer_timeout"]
[connection signal="timeout" from="DashTimer" to="." method="_on_dash_timer_timeout"]
[connection signal="timeout" from="HurtTimer" to="." method="_on_hurt_timer_timeout"]
